# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import server.app.grpc.generated.payments_pb2 as payments__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in payments_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class PaymentsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePayment = channel.unary_unary(
                '/payments.PaymentsService/CreatePayment',
                request_serializer=payments__pb2.CreatePaymentRequest.SerializeToString,
                response_deserializer=payments__pb2.PaymentResponse.FromString,
                _registered_method=True)
        self.GetAllUserPayments = channel.unary_unary(
                '/payments.PaymentsService/GetAllUserPayments',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=payments__pb2.PaymentListResponsePerUser.FromString,
                _registered_method=True)
        self.GetPayment = channel.unary_unary(
                '/payments.PaymentsService/GetPayment',
                request_serializer=payments__pb2.PaymentRequest.SerializeToString,
                response_deserializer=payments__pb2.PaymentResponse.FromString,
                _registered_method=True)
        self.DeletePayment = channel.unary_unary(
                '/payments.PaymentsService/DeletePayment',
                request_serializer=payments__pb2.PaymentRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.AdminGetAllUsersPayments = channel.unary_unary(
                '/payments.PaymentsService/AdminGetAllUsersPayments',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=payments__pb2.PaymentListResponse.FromString,
                _registered_method=True)
        self.AdminGetAllUserPayments = channel.unary_unary(
                '/payments.PaymentsService/AdminGetAllUserPayments',
                request_serializer=payments__pb2.UserRequest.SerializeToString,
                response_deserializer=payments__pb2.PaymentListResponsePerUser.FromString,
                _registered_method=True)
        self.AdminGetUserPayment = channel.unary_unary(
                '/payments.PaymentsService/AdminGetUserPayment',
                request_serializer=payments__pb2.UserPaymentRequest.SerializeToString,
                response_deserializer=payments__pb2.PaymentDetailResponse.FromString,
                _registered_method=True)
        self.AdminDeleteUserPayment = channel.unary_unary(
                '/payments.PaymentsService/AdminDeleteUserPayment',
                request_serializer=payments__pb2.UserPaymentRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class PaymentsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreatePayment(self, request, context):
        """Create payment method for user from auth token
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllUserPayments(self, request, context):
        """Get list of all payment methods for user  from auth token
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPayment(self, request, context):
        """Get single payment methood for user from auth token with payment_id 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePayment(self, request, context):
        """Delete payment method for user from auth token with payment_id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdminGetAllUsersPayments(self, request, context):
        """Get list of all payment methods for all users
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdminGetAllUserPayments(self, request, context):
        """Get list of all payment methods for a selected user
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdminGetUserPayment(self, request, context):
        """Get single payment method for a selected user 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdminDeleteUserPayment(self, request, context):
        """Delete payment method for a selected user
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PaymentsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePayment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePayment,
                    request_deserializer=payments__pb2.CreatePaymentRequest.FromString,
                    response_serializer=payments__pb2.PaymentResponse.SerializeToString,
            ),
            'GetAllUserPayments': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllUserPayments,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=payments__pb2.PaymentListResponsePerUser.SerializeToString,
            ),
            'GetPayment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPayment,
                    request_deserializer=payments__pb2.PaymentRequest.FromString,
                    response_serializer=payments__pb2.PaymentResponse.SerializeToString,
            ),
            'DeletePayment': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePayment,
                    request_deserializer=payments__pb2.PaymentRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'AdminGetAllUsersPayments': grpc.unary_unary_rpc_method_handler(
                    servicer.AdminGetAllUsersPayments,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=payments__pb2.PaymentListResponse.SerializeToString,
            ),
            'AdminGetAllUserPayments': grpc.unary_unary_rpc_method_handler(
                    servicer.AdminGetAllUserPayments,
                    request_deserializer=payments__pb2.UserRequest.FromString,
                    response_serializer=payments__pb2.PaymentListResponsePerUser.SerializeToString,
            ),
            'AdminGetUserPayment': grpc.unary_unary_rpc_method_handler(
                    servicer.AdminGetUserPayment,
                    request_deserializer=payments__pb2.UserPaymentRequest.FromString,
                    response_serializer=payments__pb2.PaymentDetailResponse.SerializeToString,
            ),
            'AdminDeleteUserPayment': grpc.unary_unary_rpc_method_handler(
                    servicer.AdminDeleteUserPayment,
                    request_deserializer=payments__pb2.UserPaymentRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'payments.PaymentsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('payments.PaymentsService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PaymentsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreatePayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/payments.PaymentsService/CreatePayment',
            payments__pb2.CreatePaymentRequest.SerializeToString,
            payments__pb2.PaymentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllUserPayments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/payments.PaymentsService/GetAllUserPayments',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            payments__pb2.PaymentListResponsePerUser.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/payments.PaymentsService/GetPayment',
            payments__pb2.PaymentRequest.SerializeToString,
            payments__pb2.PaymentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeletePayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/payments.PaymentsService/DeletePayment',
            payments__pb2.PaymentRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AdminGetAllUsersPayments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/payments.PaymentsService/AdminGetAllUsersPayments',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            payments__pb2.PaymentListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AdminGetAllUserPayments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/payments.PaymentsService/AdminGetAllUserPayments',
            payments__pb2.UserRequest.SerializeToString,
            payments__pb2.PaymentListResponsePerUser.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AdminGetUserPayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/payments.PaymentsService/AdminGetUserPayment',
            payments__pb2.UserPaymentRequest.SerializeToString,
            payments__pb2.PaymentDetailResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AdminDeleteUserPayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/payments.PaymentsService/AdminDeleteUserPayment',
            payments__pb2.UserPaymentRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
